"use strict";
/**
 * (C) Copyright IBM Corp. 2017, 2020.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * IBM OpenAPI SDK Code Generator Version: 99-SNAPSHOT-8d569e8f-20201103-112432
 */
var extend = require("extend");
var ibm_cloud_sdk_core_1 = require("ibm-cloud-sdk-core");
var common_1 = require("../lib/common");
/**
 * IBM&reg; will begin sunsetting IBM Watson&trade; Personality Insights on 1 December 2020. For a period of one year
 * from this date, you will still be able to use Watson Personality Insights. However, as of 1 December 2021, the
 * offering will no longer be available.<br/><br/>As an alternative, we encourage you to consider migrating to IBM
 * Watson&trade; Natural Language Understanding, a service on IBM Cloud&reg; that uses deep learning to extract data and
 * insights from text such as keywords, categories, sentiment, emotion, and syntax to provide insights for your business
 * or industry. For more information, see [About Natural Language
 * Understanding](https://cloud.ibm.com/docs/natural-language-understanding?topic=natural-language-understanding-about).
 * {: deprecated}
 *
 * The IBM Watson Personality Insights service enables applications to derive insights from social media, enterprise
 * data, or other digital communications. The service uses linguistic analytics to infer individuals' intrinsic
 * personality characteristics, including Big Five, Needs, and Values, from digital communications such as email, text
 * messages, tweets, and forum posts.
 *
 * The service can automatically infer, from potentially noisy social media, portraits of individuals that reflect their
 * personality characteristics. The service can infer consumption preferences based on the results of its analysis and,
 * for JSON content that is timestamped, can report temporal behavior.
 * * For information about the meaning of the models that the service uses to describe personality characteristics, see
 * [Personality models](https://cloud.ibm.com/docs/personality-insights?topic=personality-insights-models#models).
 * * For information about the meaning of the consumption preferences, see [Consumption
 * preferences](https://cloud.ibm.com/docs/personality-insights?topic=personality-insights-preferences#preferences).
 *
 * **Note:** Request logging is disabled for the Personality Insights service. Regardless of whether you set the
 * `X-Watson-Learning-Opt-Out` request header, the service does not log or retain data from requests and responses.
 */
var PersonalityInsightsV3 = /** @class */ (function (_super) {
    __extends(PersonalityInsightsV3, _super);
    /**
     * Construct a PersonalityInsightsV3 object.
     *
     * @param {Object} options - Options for the service.
     * @param {string} options.version - Release date of the version of the API you want to use. Specify dates in
     * YYYY-MM-DD format. The current version is `2017-10-13`.
     * @param {string} [options.serviceUrl] - The base url to use when contacting the service (e.g. 'https://api.us-south.personality-insights.watson.cloud.ibm.com'). The base url may differ between IBM Cloud regions.
     * @param {OutgoingHttpHeaders} [options.headers] - Default headers that shall be included with every request to the service.
     * @param {string} [options.serviceName] - The name of the service to configure
     * @param {Authenticator} [options.authenticator] - The Authenticator object used to authenticate requests to the service. Defaults to environment if not set
     * @constructor
     * @returns {PersonalityInsightsV3}
     */
    function PersonalityInsightsV3(options) {
        var _this = this;
        console.warn("On 1 December 2021, Personality Insights will no longer be available. \n    Consider migrating to Watson Natural Language Understanding. \n    For more information, see https://github.com/watson-developer-cloud/node-sdk/tree/master#personality-insights-deprecation");
        options = options || {};
        var requiredParams = ['version'];
        var missingParams = ibm_cloud_sdk_core_1.getMissingParams(options, requiredParams);
        if (missingParams) {
            throw missingParams;
        }
        if (!options.serviceName) {
            options.serviceName = PersonalityInsightsV3.DEFAULT_SERVICE_NAME;
        }
        // If the caller didn't supply an authenticator, construct one from external configuration.
        if (!options.authenticator) {
            options.authenticator = ibm_cloud_sdk_core_1.getAuthenticatorFromEnvironment(options.serviceName);
        }
        _this = _super.call(this, options) || this;
        _this.configureService(options.serviceName);
        if (options.serviceUrl) {
            _this.setServiceUrl(options.serviceUrl);
        }
        _this.version = options.version;
        return _this;
    }
    /*************************
     * methods
     ************************/
    /**
     * Get profile.
     *
     * Generates a personality profile for the author of the input text. The service accepts a maximum of 20 MB of input
     * content, but it requires much less text to produce an accurate profile. The service can analyze text in Arabic,
     * English, Japanese, Korean, or Spanish. It can return its results in a variety of languages.
     *
     * **See also:**
     * * [Requesting a profile](https://cloud.ibm.com/docs/personality-insights?topic=personality-insights-input#input)
     * * [Providing sufficient
     * input](https://cloud.ibm.com/docs/personality-insights?topic=personality-insights-input#sufficient)
     *
     * ### Content types
     *
     *  You can provide input content as plain text (`text/plain`), HTML (`text/html`), or JSON (`application/json`) by
     * specifying the **Content-Type** parameter. The default is `text/plain`.
     * * Per the JSON specification, the default character encoding for JSON content is effectively always UTF-8.
     * * Per the HTTP specification, the default encoding for plain text and HTML is ISO-8859-1 (effectively, the ASCII
     * character set).
     *
     * When specifying a content type of plain text or HTML, include the `charset` parameter to indicate the character
     * encoding of the input text; for example, `Content-Type: text/plain;charset=utf-8`.
     *
     * **See also:** [Specifying request and response
     * formats](https://cloud.ibm.com/docs/personality-insights?topic=personality-insights-input#formats)
     *
     * ### Accept types
     *
     *  You must request a response as JSON (`application/json`) or comma-separated values (`text/csv`) by specifying the
     * **Accept** parameter. CSV output includes a fixed number of columns. Set the **csv_headers** parameter to `true` to
     * request optional column headers for CSV output.
     *
     * **See also:**
     * * [Understanding a JSON
     * profile](https://cloud.ibm.com/docs/personality-insights?topic=personality-insights-output#output)
     * * [Understanding a CSV
     * profile](https://cloud.ibm.com/docs/personality-insights?topic=personality-insights-outputCSV#outputCSV).
     *
     * @param {Object} params - The parameters to send to the service.
     * @param {Content|string} params.content - A maximum of 20 MB of content to analyze, though the service requires much
     * less text; for more information, see [Providing sufficient
     * input](https://cloud.ibm.com/docs/personality-insights?topic=personality-insights-input#sufficient). For JSON
     * input, provide an object of type `Content`.
     * @param {string} [params.contentType] - The type of the input. For more information, see **Content types** in the
     * method description.
     * @param {string} [params.contentLanguage] - The language of the input text for the request: Arabic, English,
     * Japanese, Korean, or Spanish. Regional variants are treated as their parent language; for example, `en-US` is
     * interpreted as `en`.
     *
     * The effect of the **Content-Language** parameter depends on the **Content-Type** parameter. When **Content-Type**
     * is `text/plain` or `text/html`, **Content-Language** is the only way to specify the language. When **Content-Type**
     * is `application/json`, **Content-Language** overrides a language specified with the `language` parameter of a
     * `ContentItem` object, and content items that specify a different language are ignored; omit this parameter to base
     * the language on the specification of the content items. You can specify any combination of languages for
     * **Content-Language** and **Accept-Language**.
     * @param {string} [params.acceptLanguage] - The desired language of the response. For two-character arguments,
     * regional variants are treated as their parent language; for example, `en-US` is interpreted as `en`. You can
     * specify any combination of languages for the input and response content.
     * @param {boolean} [params.rawScores] - Indicates whether a raw score in addition to a normalized percentile is
     * returned for each characteristic; raw scores are not compared with a sample population. By default, only normalized
     * percentiles are returned.
     * @param {boolean} [params.csvHeaders] - Indicates whether column labels are returned with a CSV response. By
     * default, no column labels are returned. Applies only when the response type is CSV (`text/csv`).
     * @param {boolean} [params.consumptionPreferences] - Indicates whether consumption preferences are returned with the
     * results. By default, no consumption preferences are returned.
     * @param {OutgoingHttpHeaders} [params.headers] - Custom request headers
     * @returns {Promise<PersonalityInsightsV3.Response<PersonalityInsightsV3.Profile>>}
     */
    PersonalityInsightsV3.prototype.profile = function (params) {
        var _params = Object.assign({}, params);
        var requiredParams = ['content'];
        var missingParams = ibm_cloud_sdk_core_1.getMissingParams(_params, requiredParams);
        if (missingParams) {
            return Promise.reject(missingParams);
        }
        var body = _params.content;
        var query = {
            'version': this.version,
            'raw_scores': _params.rawScores,
            'csv_headers': _params.csvHeaders,
            'consumption_preferences': _params.consumptionPreferences
        };
        var sdkHeaders = common_1.getSdkHeaders(PersonalityInsightsV3.DEFAULT_SERVICE_NAME, 'v3', 'profile');
        var parameters = {
            options: {
                url: '/v3/profile',
                method: 'POST',
                body: body,
                qs: query,
            },
            defaultOptions: extend(true, {}, this.baseOptions, {
                headers: extend(true, sdkHeaders, {
                    'Accept': 'application/json',
                    'Content-Type': _params.contentType,
                    'Content-Language': _params.contentLanguage,
                    'Accept-Language': _params.acceptLanguage
                }, _params.headers),
            }),
        };
        return this.createRequest(parameters);
    };
    ;
    /**
     * Get profile as csv.
     *
     * Generates a personality profile for the author of the input text. The service accepts a maximum of 20 MB of input
     * content, but it requires much less text to produce an accurate profile. The service can analyze text in Arabic,
     * English, Japanese, Korean, or Spanish. It can return its results in a variety of languages.
     *
     * **See also:**
     * * [Requesting a profile](https://cloud.ibm.com/docs/personality-insights?topic=personality-insights-input#input)
     * * [Providing sufficient
     * input](https://cloud.ibm.com/docs/personality-insights?topic=personality-insights-input#sufficient)
     *
     * ### Content types
     *
     *  You can provide input content as plain text (`text/plain`), HTML (`text/html`), or JSON (`application/json`) by
     * specifying the **Content-Type** parameter. The default is `text/plain`.
     * * Per the JSON specification, the default character encoding for JSON content is effectively always UTF-8.
     * * Per the HTTP specification, the default encoding for plain text and HTML is ISO-8859-1 (effectively, the ASCII
     * character set).
     *
     * When specifying a content type of plain text or HTML, include the `charset` parameter to indicate the character
     * encoding of the input text; for example, `Content-Type: text/plain;charset=utf-8`.
     *
     * **See also:** [Specifying request and response
     * formats](https://cloud.ibm.com/docs/personality-insights?topic=personality-insights-input#formats)
     *
     * ### Accept types
     *
     *  You must request a response as JSON (`application/json`) or comma-separated values (`text/csv`) by specifying the
     * **Accept** parameter. CSV output includes a fixed number of columns. Set the **csv_headers** parameter to `true` to
     * request optional column headers for CSV output.
     *
     * **See also:**
     * * [Understanding a JSON
     * profile](https://cloud.ibm.com/docs/personality-insights?topic=personality-insights-output#output)
     * * [Understanding a CSV
     * profile](https://cloud.ibm.com/docs/personality-insights?topic=personality-insights-outputCSV#outputCSV).
     *
     * @param {Object} params - The parameters to send to the service.
     * @param {Content|string} params.content - A maximum of 20 MB of content to analyze, though the service requires much
     * less text; for more information, see [Providing sufficient
     * input](https://cloud.ibm.com/docs/personality-insights?topic=personality-insights-input#sufficient). For JSON
     * input, provide an object of type `Content`.
     * @param {string} [params.contentType] - The type of the input. For more information, see **Content types** in the
     * method description.
     * @param {string} [params.contentLanguage] - The language of the input text for the request: Arabic, English,
     * Japanese, Korean, or Spanish. Regional variants are treated as their parent language; for example, `en-US` is
     * interpreted as `en`.
     *
     * The effect of the **Content-Language** parameter depends on the **Content-Type** parameter. When **Content-Type**
     * is `text/plain` or `text/html`, **Content-Language** is the only way to specify the language. When **Content-Type**
     * is `application/json`, **Content-Language** overrides a language specified with the `language` parameter of a
     * `ContentItem` object, and content items that specify a different language are ignored; omit this parameter to base
     * the language on the specification of the content items. You can specify any combination of languages for
     * **Content-Language** and **Accept-Language**.
     * @param {string} [params.acceptLanguage] - The desired language of the response. For two-character arguments,
     * regional variants are treated as their parent language; for example, `en-US` is interpreted as `en`. You can
     * specify any combination of languages for the input and response content.
     * @param {boolean} [params.rawScores] - Indicates whether a raw score in addition to a normalized percentile is
     * returned for each characteristic; raw scores are not compared with a sample population. By default, only normalized
     * percentiles are returned.
     * @param {boolean} [params.csvHeaders] - Indicates whether column labels are returned with a CSV response. By
     * default, no column labels are returned. Applies only when the response type is CSV (`text/csv`).
     * @param {boolean} [params.consumptionPreferences] - Indicates whether consumption preferences are returned with the
     * results. By default, no consumption preferences are returned.
     * @param {OutgoingHttpHeaders} [params.headers] - Custom request headers
     * @returns {Promise<PersonalityInsightsV3.Response<NodeJS.ReadableStream|Buffer>>}
     */
    PersonalityInsightsV3.prototype.profileAsCsv = function (params) {
        var _params = Object.assign({}, params);
        var requiredParams = ['content'];
        var missingParams = ibm_cloud_sdk_core_1.getMissingParams(_params, requiredParams);
        if (missingParams) {
            return Promise.reject(missingParams);
        }
        var body = _params.content;
        var query = {
            'version': this.version,
            'raw_scores': _params.rawScores,
            'csv_headers': _params.csvHeaders,
            'consumption_preferences': _params.consumptionPreferences
        };
        var sdkHeaders = common_1.getSdkHeaders(PersonalityInsightsV3.DEFAULT_SERVICE_NAME, 'v3', 'profileAsCsv');
        var parameters = {
            options: {
                url: '/v3/profile',
                method: 'POST',
                body: body,
                qs: query,
            },
            defaultOptions: extend(true, {}, this.baseOptions, {
                headers: extend(true, sdkHeaders, {
                    'Accept': 'text/csv',
                    'Content-Type': _params.contentType,
                    'Content-Language': _params.contentLanguage,
                    'Accept-Language': _params.acceptLanguage
                }, _params.headers),
            }),
        };
        return this.createRequest(parameters);
    };
    ;
    PersonalityInsightsV3.DEFAULT_SERVICE_URL = 'https://api.us-south.personality-insights.watson.cloud.ibm.com';
    PersonalityInsightsV3.DEFAULT_SERVICE_NAME = 'personality_insights';
    return PersonalityInsightsV3;
}(ibm_cloud_sdk_core_1.BaseService));
/*************************
 * interfaces
 ************************/
(function (PersonalityInsightsV3) {
    /** Constants for the `profile` operation. */
    var ProfileConstants;
    (function (ProfileConstants) {
        /** The type of the input. For more information, see **Content types** in the method description. */
        var ContentType;
        (function (ContentType) {
            ContentType["APPLICATION_JSON"] = "application/json";
            ContentType["TEXT_HTML"] = "text/html";
            ContentType["TEXT_PLAIN"] = "text/plain";
        })(ContentType = ProfileConstants.ContentType || (ProfileConstants.ContentType = {}));
        /** The language of the input text for the request: Arabic, English, Japanese, Korean, or Spanish. Regional variants are treated as their parent language; for example, `en-US` is interpreted as `en`. The effect of the **Content-Language** parameter depends on the **Content-Type** parameter. When **Content-Type** is `text/plain` or `text/html`, **Content-Language** is the only way to specify the language. When **Content-Type** is `application/json`, **Content-Language** overrides a language specified with the `language` parameter of a `ContentItem` object, and content items that specify a different language are ignored; omit this parameter to base the language on the specification of the content items. You can specify any combination of languages for **Content-Language** and **Accept-Language**. */
        var ContentLanguage;
        (function (ContentLanguage) {
            ContentLanguage["AR"] = "ar";
            ContentLanguage["EN"] = "en";
            ContentLanguage["ES"] = "es";
            ContentLanguage["JA"] = "ja";
            ContentLanguage["KO"] = "ko";
        })(ContentLanguage = ProfileConstants.ContentLanguage || (ProfileConstants.ContentLanguage = {}));
        /** The desired language of the response. For two-character arguments, regional variants are treated as their parent language; for example, `en-US` is interpreted as `en`. You can specify any combination of languages for the input and response content. */
        var AcceptLanguage;
        (function (AcceptLanguage) {
            AcceptLanguage["AR"] = "ar";
            AcceptLanguage["DE"] = "de";
            AcceptLanguage["EN"] = "en";
            AcceptLanguage["ES"] = "es";
            AcceptLanguage["FR"] = "fr";
            AcceptLanguage["IT"] = "it";
            AcceptLanguage["JA"] = "ja";
            AcceptLanguage["KO"] = "ko";
            AcceptLanguage["PT_BR"] = "pt-br";
            AcceptLanguage["ZH_CN"] = "zh-cn";
            AcceptLanguage["ZH_TW"] = "zh-tw";
        })(AcceptLanguage = ProfileConstants.AcceptLanguage || (ProfileConstants.AcceptLanguage = {}));
    })(ProfileConstants = PersonalityInsightsV3.ProfileConstants || (PersonalityInsightsV3.ProfileConstants = {}));
    /** Constants for the `profileAsCsv` operation. */
    var ProfileAsCsvConstants;
    (function (ProfileAsCsvConstants) {
        /** The type of the input. For more information, see **Content types** in the method description. */
        var ContentType;
        (function (ContentType) {
            ContentType["APPLICATION_JSON"] = "application/json";
            ContentType["TEXT_HTML"] = "text/html";
            ContentType["TEXT_PLAIN"] = "text/plain";
        })(ContentType = ProfileAsCsvConstants.ContentType || (ProfileAsCsvConstants.ContentType = {}));
        /** The language of the input text for the request: Arabic, English, Japanese, Korean, or Spanish. Regional variants are treated as their parent language; for example, `en-US` is interpreted as `en`. The effect of the **Content-Language** parameter depends on the **Content-Type** parameter. When **Content-Type** is `text/plain` or `text/html`, **Content-Language** is the only way to specify the language. When **Content-Type** is `application/json`, **Content-Language** overrides a language specified with the `language` parameter of a `ContentItem` object, and content items that specify a different language are ignored; omit this parameter to base the language on the specification of the content items. You can specify any combination of languages for **Content-Language** and **Accept-Language**. */
        var ContentLanguage;
        (function (ContentLanguage) {
            ContentLanguage["AR"] = "ar";
            ContentLanguage["EN"] = "en";
            ContentLanguage["ES"] = "es";
            ContentLanguage["JA"] = "ja";
            ContentLanguage["KO"] = "ko";
        })(ContentLanguage = ProfileAsCsvConstants.ContentLanguage || (ProfileAsCsvConstants.ContentLanguage = {}));
        /** The desired language of the response. For two-character arguments, regional variants are treated as their parent language; for example, `en-US` is interpreted as `en`. You can specify any combination of languages for the input and response content. */
        var AcceptLanguage;
        (function (AcceptLanguage) {
            AcceptLanguage["AR"] = "ar";
            AcceptLanguage["DE"] = "de";
            AcceptLanguage["EN"] = "en";
            AcceptLanguage["ES"] = "es";
            AcceptLanguage["FR"] = "fr";
            AcceptLanguage["IT"] = "it";
            AcceptLanguage["JA"] = "ja";
            AcceptLanguage["KO"] = "ko";
            AcceptLanguage["PT_BR"] = "pt-br";
            AcceptLanguage["ZH_CN"] = "zh-cn";
            AcceptLanguage["ZH_TW"] = "zh-tw";
        })(AcceptLanguage = ProfileAsCsvConstants.AcceptLanguage || (ProfileAsCsvConstants.AcceptLanguage = {}));
    })(ProfileAsCsvConstants = PersonalityInsightsV3.ProfileAsCsvConstants || (PersonalityInsightsV3.ProfileAsCsvConstants = {}));
})(PersonalityInsightsV3 || (PersonalityInsightsV3 = {}));
module.exports = PersonalityInsightsV3;
